name: Release

on:
  workflow_dispatch:
    inputs:
      type:
        description: 'Release type'
        required: true
        type: choice
        default: 'patch'
        options:
          - patch
          - minor
          - major

jobs:
  release:
    runs-on: ubuntu-latest

    if: ${{ github.ref == 'refs/heads/main' }}

    env:
      YARN_ENABLE_IMMUTABLE_INSTALLS: false
      CI: true
      NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
      NEW_VERSION: ${{ github.event.inputs.type }}

    steps:
      - name: Environment
        run: echo "environment is ${{ env.NEW_VERSION }}"

      - name: Env variables
        run: printenv

      - name: Checkout üõéÔ∏è
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Install and Build üîß
        uses: actions/setup-node@v3
        with:
          node-version: '16'
          registry-url: 'https://registry.npmjs.org'

      - name: Setup AWS CLI
        run: bash bin/aws

      - name: Setup Node
        run: bash bin/node

      - name: Set a new version
        run: bash bin/version

      - name: Get New Version
        id: new_version
        run: echo "::set-output name=version::$(bash bin/get_version)"
        shell: bash

      - name: Build packages
        run: yarn run dist

      - name: Commit changes
        run: |
          git config --global user.name 'Evheniy Bystrov'
          git config --global user.email 'evheniy.bystrov@gmail.com'
          git commit -am "${{ steps.new_version.outputs.version }}"
          git push

      - name: Publish new packages
        run: yarn run publish

      - name: Github release
        uses: release-drafter/release-drafter@v5
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          version: ${{ steps.new_version.outputs.version }}
          tag: ${{ steps.new_version.outputs.version }}
          publish: true

      - name: Slack Notification
        uses: rtCamp/action-slack-notify@v2
        if: always()
        env:
          SLACK_CHANNEL: general
          SLACK_COLOR: ${{ job.status }}
          SLACK_ICON: https://github.com/rtCamp.png?size=48
          # SLACK_MESSAGE: ':rocket:'
          # SLACK_TITLE: Test
          SLACK_USERNAME: rtCamp
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
